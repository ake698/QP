// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QP.Entity;

namespace QP.Entity.Migrations
{
    [DbContext(typeof(QPContext))]
    [Migration("20201126005829_AddSeriesEn")]
    partial class AddSeriesEn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("QP.Entity.CategoryType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime")
                        .HasMaxLength(0);

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime")
                        .HasMaxLength(0);

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("SeriesTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SeriesTypeId");

                    b.ToTable("data_Category");

                    b.HasData(
                        new
                        {
                            Id = 6,
                            CreationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6210),
                            IsDelete = false,
                            LastModificationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(5693),
                            Name = "动作片",
                            SeriesTypeId = 1
                        },
                        new
                        {
                            Id = 7,
                            CreationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6248),
                            IsDelete = false,
                            LastModificationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6230),
                            Name = "喜剧",
                            SeriesTypeId = 1
                        },
                        new
                        {
                            Id = 8,
                            CreationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6251),
                            IsDelete = false,
                            LastModificationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6250),
                            Name = "爱情片",
                            SeriesTypeId = 1
                        },
                        new
                        {
                            Id = 9,
                            CreationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6253),
                            IsDelete = false,
                            LastModificationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6252),
                            Name = "科幻片",
                            SeriesTypeId = 1
                        },
                        new
                        {
                            Id = 10,
                            CreationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6256),
                            IsDelete = false,
                            LastModificationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6254),
                            Name = "恐怖片",
                            SeriesTypeId = 1
                        },
                        new
                        {
                            Id = 11,
                            CreationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6258),
                            IsDelete = false,
                            LastModificationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6257),
                            Name = "剧情片",
                            SeriesTypeId = 1
                        },
                        new
                        {
                            Id = 12,
                            CreationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6260),
                            IsDelete = false,
                            LastModificationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6259),
                            Name = "战争片",
                            SeriesTypeId = 1
                        },
                        new
                        {
                            Id = 13,
                            CreationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6262),
                            IsDelete = false,
                            LastModificationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6261),
                            Name = "国产剧",
                            SeriesTypeId = 2
                        },
                        new
                        {
                            Id = 14,
                            CreationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6264),
                            IsDelete = false,
                            LastModificationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6263),
                            Name = "港剧",
                            SeriesTypeId = 2
                        },
                        new
                        {
                            Id = 15,
                            CreationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6266),
                            IsDelete = false,
                            LastModificationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6265),
                            Name = "韩剧",
                            SeriesTypeId = 2
                        },
                        new
                        {
                            Id = 16,
                            CreationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6268),
                            IsDelete = false,
                            LastModificationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6267),
                            Name = "欧美剧",
                            SeriesTypeId = 2
                        },
                        new
                        {
                            Id = 20,
                            CreationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6270),
                            IsDelete = false,
                            LastModificationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6269),
                            Name = "纪录片",
                            SeriesTypeId = 2
                        },
                        new
                        {
                            Id = 21,
                            CreationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6272),
                            IsDelete = false,
                            LastModificationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6271),
                            Name = "微电影",
                            SeriesTypeId = 2
                        },
                        new
                        {
                            Id = 22,
                            CreationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6274),
                            IsDelete = false,
                            LastModificationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6273),
                            Name = "台湾剧",
                            SeriesTypeId = 2
                        },
                        new
                        {
                            Id = 23,
                            CreationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6277),
                            IsDelete = false,
                            LastModificationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6276),
                            Name = "日剧",
                            SeriesTypeId = 2
                        },
                        new
                        {
                            Id = 25,
                            CreationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6279),
                            IsDelete = false,
                            LastModificationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6278),
                            Name = "大陆综艺",
                            SeriesTypeId = 3
                        },
                        new
                        {
                            Id = 26,
                            CreationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6281),
                            IsDelete = false,
                            LastModificationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6280),
                            Name = "港台综艺",
                            SeriesTypeId = 3
                        },
                        new
                        {
                            Id = 27,
                            CreationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6283),
                            IsDelete = false,
                            LastModificationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6282),
                            Name = "日韩综艺",
                            SeriesTypeId = 3
                        },
                        new
                        {
                            Id = 28,
                            CreationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6285),
                            IsDelete = false,
                            LastModificationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6284),
                            Name = "欧美综艺",
                            SeriesTypeId = 3
                        },
                        new
                        {
                            Id = 29,
                            CreationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6287),
                            IsDelete = false,
                            LastModificationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6286),
                            Name = "国产动漫",
                            SeriesTypeId = 4
                        },
                        new
                        {
                            Id = 30,
                            CreationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6290),
                            IsDelete = false,
                            LastModificationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6288),
                            Name = "日韩动漫",
                            SeriesTypeId = 4
                        },
                        new
                        {
                            Id = 31,
                            CreationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6292),
                            IsDelete = false,
                            LastModificationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6291),
                            Name = "欧美动漫",
                            SeriesTypeId = 4
                        },
                        new
                        {
                            Id = 32,
                            CreationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6294),
                            IsDelete = false,
                            LastModificationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6293),
                            Name = "港台动漫",
                            SeriesTypeId = 4
                        },
                        new
                        {
                            Id = 33,
                            CreationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6296),
                            IsDelete = false,
                            LastModificationTime = new DateTime(2020, 11, 26, 8, 58, 29, 41, DateTimeKind.Local).AddTicks(6295),
                            Name = "其他",
                            SeriesTypeId = 4
                        });
                });

            modelBuilder.Entity("QP.Entity.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime")
                        .HasMaxLength(0);

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsResolved")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime")
                        .HasMaxLength(0);

                    b.HasKey("Id");

                    b.ToTable("data_message");
                });

            modelBuilder.Entity("QP.Entity.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime")
                        .HasMaxLength(0);

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime")
                        .HasMaxLength(0);

                    b.Property<string>("Link")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("data_Resource");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationTime = new DateTime(2020, 11, 26, 8, 58, 29, 38, DateTimeKind.Local).AddTicks(2124),
                            IsDelete = false,
                            LastModificationTime = new DateTime(2020, 11, 26, 8, 58, 29, 38, DateTimeKind.Local).AddTicks(1601),
                            Link = "http://api.iokzy.com/",
                            Name = "OK"
                        });
                });

            modelBuilder.Entity("QP.Entity.SeriesType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime")
                        .HasMaxLength(0);

                    b.Property<string>("En")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Icon")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime")
                        .HasMaxLength(0);

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("data_Series");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Icon = "icon_1.png",
                            IsDelete = false,
                            LastModificationTime = new DateTime(2020, 11, 26, 8, 58, 29, 35, DateTimeKind.Local).AddTicks(8100),
                            Name = "电影"
                        },
                        new
                        {
                            Id = 2,
                            CreationTime = new DateTime(2020, 11, 26, 8, 58, 29, 36, DateTimeKind.Local).AddTicks(7640),
                            En = "dianshiju",
                            Icon = "icon_2.png",
                            IsDelete = false,
                            LastModificationTime = new DateTime(2020, 11, 26, 8, 58, 29, 36, DateTimeKind.Local).AddTicks(7405),
                            Name = "电视剧"
                        },
                        new
                        {
                            Id = 3,
                            CreationTime = new DateTime(2020, 11, 26, 8, 58, 29, 36, DateTimeKind.Local).AddTicks(7927),
                            En = "zongyi",
                            Icon = "icon_3.png",
                            IsDelete = false,
                            LastModificationTime = new DateTime(2020, 11, 26, 8, 58, 29, 36, DateTimeKind.Local).AddTicks(7900),
                            Name = "综艺"
                        },
                        new
                        {
                            Id = 4,
                            CreationTime = new DateTime(2020, 11, 26, 8, 58, 29, 36, DateTimeKind.Local).AddTicks(7930),
                            En = "donghua",
                            Icon = "icon_4.png",
                            IsDelete = false,
                            LastModificationTime = new DateTime(2020, 11, 26, 8, 58, 29, 36, DateTimeKind.Local).AddTicks(7928),
                            Name = "动画"
                        });
                });

            modelBuilder.Entity("QP.Entity.VideoBasicInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Actor")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Alias")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("AreaName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("CategoryTypeId")
                        .HasColumnType("int");

                    b.Property<string>("CategoryTypeNames")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Count")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime")
                        .HasMaxLength(0);

                    b.Property<string>("Describes")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Dierctor")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("En")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Image")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsHot")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<string>("Language")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime")
                        .HasMaxLength(0);

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<float>("Rate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(8f);

                    b.Property<string>("Remark")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("SeriesTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Year")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("CategoryTypeId");

                    b.ToTable("Vod_BasicInfo");
                });

            modelBuilder.Entity("QP.Entity.VideoPlayInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BasicInfoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime")
                        .HasMaxLength(0);

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<string>("Kuyun")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime")
                        .HasMaxLength(0);

                    b.Property<string>("M3u8")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Mp4")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ResourceId")
                        .HasColumnType("int");

                    b.Property<int>("VodId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BasicInfoId");

                    b.HasIndex("ResourceId");

                    b.ToTable("Vod_PlayInfo");
                });

            modelBuilder.Entity("QP.Entity.CategoryType", b =>
                {
                    b.HasOne("QP.Entity.SeriesType", "SeriesType")
                        .WithMany()
                        .HasForeignKey("SeriesTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QP.Entity.VideoBasicInfo", b =>
                {
                    b.HasOne("QP.Entity.CategoryType", "CategoryType")
                        .WithMany()
                        .HasForeignKey("CategoryTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("QP.Entity.VideoPlayInfo", b =>
                {
                    b.HasOne("QP.Entity.VideoBasicInfo", "VideoBasicInfo")
                        .WithMany()
                        .HasForeignKey("BasicInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QP.Entity.Resource", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
